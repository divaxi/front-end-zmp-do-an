// This file is auto-generated by @hey-api/openapi-ts

export type Appointment = {
  specificTime: string;
  active: boolean;
  note: string | null;
  /**
   * Status of the appointment (1 = pending, 2 = inprogress, 3 = done)
   */
  status: StatusEnum;
  customerRecord: CustomerRecord;
  id: string;
  createdAt: string;
  updatedAt: string;
};

export type AppointmentDto = {
  id: string;
};

export type AppointmentSatisticDto = {
  count: number;
};

export type AppointmentService = {
  scheduleId: string;
  appointment: Appointment;
  serviceId: string;
  staffId: string;
  id: string;
  createdAt: string;
  updatedAt: string;
};

export type AuthZaloLoginDto = {
  zaloAccessToken: string;
};

export type ChatbotResponseDto = {
  content: string;
};

export type CreateAppointmentDto = {
  specificTime: string;
  note?: string;
  serviceAndScheduleIds: Array<ServiceScheduleDto>;
  customerRecord: CustomerRecordDto;
};

export type CreateCustomerRecordDto = {
  BHYTNumber?: string;
  CCCDNumber?: string;
  DOB: string;
  sex: string;
  fullName: string;
};

export type CreateFileDto = {
  path: string;
};

export type CreateReceptionDto = {
  note?: string;
  checkinTime?: string;
  Appointment: AppointmentDto;
};

export type CreateScheduleDto = {
  note?: string;
  endTime: string;
  startTime: string;
  staff: StaffDto;
};

export type CreateServiceDto = {
  image?: ImageDto;
  price?: number;
  description?: string;
  serviceName: string;
};

export type CreateStaffDto = {
  note?: string;
  specialization?: string;
};

export type CreateUserDto = {
  phoneNumber: string;
  userName: string;
  avatar?: FileDto;
  role?: RoleDto;
};

export type CustomerRecord = {
  active: boolean;
  BHYTNumber: string | null;
  CCCDNumber: string | null;
  DOB: string;
  sex: string;
  fullName: string;
  user: User;
  id: string;
  createdAt: string;
  updatedAt: string;
};

export type CustomerRecordDto = {
  id: string;
};

export type EnumerateResponseDto = {
  data: Array<string>;
};

export type FileDto = {
  id: string;
};

export type FileResponseDto = {
  file: FileType;
};

export type FileType = {
  id: string;
  path: string;
};

export type ImageDto = {
  [key: string]: unknown;
};

export type InfinityPaginationAppointmentResponseDto = {
  data: Array<Appointment>;
  hasNextPage: boolean;
};

export type InfinityPaginationAppointmentServiceResponseDto = {
  data: Array<AppointmentService>;
  hasNextPage: boolean;
};

export type InfinityPaginationCustomerRecordResponseDto = {
  data: Array<CustomerRecord>;
  hasNextPage: boolean;
};

export type InfinityPaginationReceptionResponseDto = {
  data: Array<Reception>;
  hasNextPage: boolean;
};

export type InfinityPaginationScheduleResponseDto = {
  data: Array<Schedule>;
  hasNextPage: boolean;
};

export type InfinityPaginationServiceResponseDto = {
  data: Array<Service>;
  hasNextPage: boolean;
};

export type InfinityPaginationStaffResponseDto = {
  data: Array<Staff>;
  hasNextPage: boolean;
};

export type InfinityPaginationUserResponseDto = {
  data: Array<User>;
  hasNextPage: boolean;
};

export type LoginResponseDto = {
  token: string;
  refreshToken: string;
  tokenExpires: number;
  user: User;
};

export type MessageDto = {
  content: Array<string>;
  /**
   * new to get chat context
   */
  initiate: boolean;
};

export type Reception = {
  note: string | null;
  /**
   * Status of the appointment (1 = notCheckin, 2 = checkin)
   */
  status: StatusEnum;
  checkinTime: string | null;
  Appointment: Appointment;
  id: string;
  createdAt: string;
  updatedAt: string;
};

export type RefreshResponseDto = {
  token: string;
  refreshToken: string;
  tokenExpires: number;
};

export type Role = {
  id: number;
  name: string;
};

export type RoleDto = {
  id: {
    [key: string]: unknown;
  };
};

export type Schedule = {
  note: string | null;
  active: boolean;
  endTime: string;
  startTime: string;
  staff: Staff;
  id: string;
  createdAt: string;
  updatedAt: string;
};

export type ScheduleDto = {
  id: string;
};

export type Service = {
  image: FileType | null;
  price: number | null;
  description: string | null;
  serviceName: string;
  id: string;
  createdAt: string;
  updatedAt: string;
};

export type ServiceDto = {
  id: string;
};

export type ServiceScheduleDto = {
  serviceId: string;
  scheduleId: string;
  staffId: string;
};

export type Staff = {
  note: string | null;
  specialization: string | null;
  id: string;
  user: User;
  createdAt: string;
  updatedAt: string;
};

export type StaffDto = {
  id: string;
};

/**
 * Status of the appointment (1 = pending, 2 = inprogress, 3 = done)
 */
export enum StatusEnum {
  "_1" = 1,
  "_2" = 2,
  "_3" = 3,
  "_4" = 4,
  "_5" = 5,
  "_6" = 6,
  "_7" = 7,
  "_8" = 8,
}

export type UpdateAppointmentDto = {
  specificTime?: string;
  note?: string;
  serviceAndScheduleIds?: Array<ServiceScheduleDto>;
  customerRecord?: CustomerRecordDto;
  /**
   * Status of the appointment (1 = pending, 2 = inprogress, 3 = done)
   */
  status: StatusEnum;
};

export type UpdateAppointmentServiceDto = {
  staff?: StaffDto;
  schedule?: ScheduleDto;
  appointment?: AppointmentDto;
  service?: ServiceDto;
};

export type UpdateCustomerRecordDto = {
  BHYTNumber?: string;
  CCCDNumber?: string;
  DOB?: string;
  sex?: string;
  fullName?: string;
};

export type UpdateScheduleDto = {
  note?: string;
  endTime?: string;
  startTime?: string;
  staff?: StaffDto;
};

export type UpdateServiceDto = {
  image?: ImageDto;
  price?: number;
  description?: string;
  serviceName?: string;
};

export type UpdateStaffDto = {
  note?: string;
  specialization?: string;
};

export type UpdateUserDto = {
  phoneNumber?: string;
  userName?: string;
  avatar?: FileDto;
  role?: RoleDto;
};

export type User = {
  id: number;
  zaloId: string;
  phoneNumber: string;
  userName: string;
  avatar: FileType;
  role: Role;
  createdAt: string;
  updatedAt: string;
  deletedAt: string;
};

export type AppointmentsControllerCreateV1Data = {
  requestBody: CreateAppointmentDto;
};

export type AppointmentsControllerCreateV1Response = Appointment;

export type AppointmentsControllerFindAllV1Data = {
  endTime?: string;
  limit?: number;
  page?: number;
  startTime?: string;
  status?: string;
  userId: number;
};

export type AppointmentsControllerFindAllV1Response =
  InfinityPaginationAppointmentResponseDto;

export type AppointmentsControllerCountByCustomerV1Data = {
  endTime: string;
  startTime: string;
};

export type AppointmentsControllerCountByCustomerV1Response =
  AppointmentSatisticDto;

export type AppointmentsControllerCountV1Data = {
  endTime: string;
  startTime: string;
};

export type AppointmentsControllerCountV1Response = AppointmentSatisticDto;

export type AppointmentsControllerFindByIdV1Data = {
  id: string;
};

export type AppointmentsControllerFindByIdV1Response = Appointment;

export type AppointmentsControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateAppointmentDto;
};

export type AppointmentsControllerUpdateV1Response = Appointment;

export type AppointmentsControllerRemoveV1Data = {
  id: string;
};

export type AppointmentsControllerRemoveV1Response = unknown;

export type AppointmentServicesControllerFindAllV1Data = {
  limit?: number;
  page?: number;
};

export type AppointmentServicesControllerFindAllV1Response =
  InfinityPaginationAppointmentServiceResponseDto;

export type AppointmentServicesControllerFindByIdV1Data = {
  id: string;
};

export type AppointmentServicesControllerFindByIdV1Response =
  AppointmentService;

export type AppointmentServicesControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateAppointmentServiceDto;
};

export type AppointmentServicesControllerUpdateV1Response = AppointmentService;

export type AppointmentServicesControllerRemoveV1Data = {
  id: string;
};

export type AppointmentServicesControllerRemoveV1Response = unknown;

export type AppointmentServicesControllerFindAppointmentByStaffV1Data = {
  staffId: string;
};

export type AppointmentServicesControllerFindAppointmentByStaffV1Response =
  Array<AppointmentService>;

export type AuthControllerLoginV1Data = {
  requestBody: AuthZaloLoginDto;
};

export type AuthControllerLoginV1Response = LoginResponseDto;

export type AuthControllerMeV1Response = User;

export type AuthControllerRefreshV1Response = RefreshResponseDto;

export type AuthControllerLogoutV1Response = void;

export type ChatbotControllerAskV1Data = {
  requestBody: MessageDto;
};

export type ChatbotControllerAskV1Response = ChatbotResponseDto;

export type CustomerRecordsControllerCreateV1Data = {
  requestBody: CreateCustomerRecordDto;
};

export type CustomerRecordsControllerCreateV1Response = CustomerRecord;

export type CustomerRecordsControllerFindAllV1Data = {
  limit?: number;
  page?: number;
};

export type CustomerRecordsControllerFindAllV1Response =
  InfinityPaginationCustomerRecordResponseDto;

export type CustomerRecordsControllerFindByUserV1Data = {
  userId: number;
};

export type CustomerRecordsControllerFindByUserV1Response =
  Array<CustomerRecord>;

export type CustomerRecordsControllerFindByIdV1Data = {
  id: string;
};

export type CustomerRecordsControllerFindByIdV1Response = CustomerRecord;

export type CustomerRecordsControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateCustomerRecordDto;
};

export type CustomerRecordsControllerUpdateV1Response = CustomerRecord;

export type CustomerRecordsControllerRemoveV1Data = {
  id: string;
};

export type CustomerRecordsControllerRemoveV1Response = unknown;

export type FilesControllerCreateV1Data = {
  requestBody: CreateFileDto;
};

export type FilesControllerCreateV1Response = FileType;

export type FilesLocalControllerUploadFileV1Data = {
  formData: {
    file?: Blob | File;
  };
};

export type FilesLocalControllerUploadFileV1Response = FileResponseDto;

export type HomeControllerAppInfoResponse = unknown;

export type ReceptionsControllerCreateV1Data = {
  requestBody: CreateReceptionDto;
};

export type ReceptionsControllerCreateV1Response = Reception;

export type ReceptionsControllerFindAllV1Data = {
  limit?: number;
  page?: number;
};

export type ReceptionsControllerFindAllV1Response =
  InfinityPaginationReceptionResponseDto;

export type ReceptionsControllerFindByIdV1Data = {
  id: string;
};

export type ReceptionsControllerFindByIdV1Response = Reception;

export type ReceptionsControllerRemoveV1Data = {
  id: string;
};

export type ReceptionsControllerRemoveV1Response = unknown;

export type ReceptionsControllerFindByAppointmentV1Data = {
  appointmentId: string;
};

export type ReceptionsControllerFindByAppointmentV1Response = Reception;

export type ReceptionsControllerCheckinV1Data = {
  id: string;
};

export type ReceptionsControllerCheckinV1Response = Reception;

export type SatisticControllerCountOrderByTimeV1Data = {
  endDate: string;
  enumerateBy?: string;
  startDate: string;
};

export type SatisticControllerCountOrderByTimeV1Response = EnumerateResponseDto;

export type SchedulesControllerCreateV1Data = {
  requestBody: CreateScheduleDto;
};

export type SchedulesControllerCreateV1Response = Schedule;

export type SchedulesControllerFindAllV1Data = {
  limit?: number;
  page?: number;
  staffId: string;
};

export type SchedulesControllerFindAllV1Response =
  InfinityPaginationScheduleResponseDto;

export type SchedulesControllerFindByDayV1Data = {
  date: string;
};

export type SchedulesControllerFindByDayV1Response = Array<Schedule>;

export type SchedulesControllerFindByIdV1Data = {
  id: string;
};

export type SchedulesControllerFindByIdV1Response = Schedule;

export type SchedulesControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateScheduleDto;
};

export type SchedulesControllerUpdateV1Response = Schedule;

export type SchedulesControllerRemoveV1Data = {
  id: string;
};

export type SchedulesControllerRemoveV1Response = unknown;

export type SchedulesControllerFindByStaffV1Data = {
  staffId: string;
};

export type SchedulesControllerFindByStaffV1Response = Array<Schedule>;

export type ServicesControllerCreateV1Data = {
  requestBody: CreateServiceDto;
};

export type ServicesControllerCreateV1Response = Service;

export type ServicesControllerFindAllV1Data = {
  limit?: number;
  page?: number;
};

export type ServicesControllerFindAllV1Response =
  InfinityPaginationServiceResponseDto;

export type ServicesControllerFindByIdV1Data = {
  id: string;
};

export type ServicesControllerFindByIdV1Response = Service;

export type ServicesControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateServiceDto;
};

export type ServicesControllerUpdateV1Response = Service;

export type ServicesControllerRemoveV1Data = {
  id: string;
};

export type ServicesControllerRemoveV1Response = unknown;

export type StaffsControllerCreateV1Data = {
  requestBody: CreateStaffDto;
};

export type StaffsControllerCreateV1Response = Staff;

export type StaffsControllerFindAllV1Data = {
  limit?: number;
  page?: number;
};

export type StaffsControllerFindAllV1Response =
  InfinityPaginationStaffResponseDto;

export type StaffsControllerFindByUserV1Data = {
  id: number;
};

export type StaffsControllerFindByUserV1Response = Staff;

export type StaffsControllerFindByIdV1Data = {
  id: string;
};

export type StaffsControllerFindByIdV1Response = Staff;

export type StaffsControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateStaffDto;
};

export type StaffsControllerUpdateV1Response = Staff;

export type StaffsControllerRemoveV1Data = {
  id: string;
};

export type StaffsControllerRemoveV1Response = unknown;

export type UsersControllerCreateV1Data = {
  requestBody: CreateUserDto;
};

export type UsersControllerCreateV1Response = User;

export type UsersControllerFindAllV1Data = {
  filters?: string;
  limit?: number;
  page?: number;
  sort?: string;
};

export type UsersControllerFindAllV1Response =
  InfinityPaginationUserResponseDto;

export type UsersControllerFindOneV1Data = {
  id: string;
};

export type UsersControllerFindOneV1Response = User;

export type UsersControllerUpdateV1Data = {
  id: string;
  requestBody: UpdateUserDto;
};

export type UsersControllerUpdateV1Response = User;

export type UsersControllerRemoveV1Data = {
  id: string;
};

export type UsersControllerRemoveV1Response = void;
