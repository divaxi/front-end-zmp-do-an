// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
  GetByDomainBookieServiceData,
  GetByDomainBookieServiceResponse,
  GetByDomainBookieProviderData,
  GetByDomainBookieProviderResponse,
  GetByDomainScheduleData,
  GetByDomainScheduleResponse,
  GetByDomainCmsDichVuPagingData,
  GetByDomainCmsDichVuPagingResponse,
  GetByDomainNewsNewsGroupedByCategoryData,
  GetByDomainNewsNewsGroupedByCategoryResponse,
  GetByDomainNewsCategoryData,
  GetByDomainNewsCategoryResponse,
  GetByDomainBookieAppointmentPhantrangData,
  GetByDomainBookieAppointmentPhantrangResponse,
  GetByDomainBookieBannersData,
  GetByDomainBookieBannersResponse,
  GetByDomainCmsdoctorPagingData,
  GetByDomainCmsdoctorPagingResponse,
  PostByDomainBookieZaloInfoData,
  PostByDomainBookieZaloInfoResponse,
} from "./types.gen";

export class DefaultService {
  /**
   * Lấy danh sách dịch vụ theo domain
   * @param data The data for the request.
   * @param data.domain Domain tên miền hệ thống
   * @returns Service Danh sách dịch vụ
   * @throws ApiError
   */
  public static getByDomainBookieService(
    data: GetByDomainBookieServiceData
  ): CancelablePromise<GetByDomainBookieServiceResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/bookie/service",
      path: {
        domain: data.domain,
      },
    });
  }

  /**
   * Lấy danh sách nhà cung cấp theo ID
   * @param data The data for the request.
   * @param data.domain Tên miền hệ thống
   * @param data.strProviderId Danh sách providerId (ngăn cách bằng dấu phẩy)
   * @param data.viewDetail Hiển thị chi tiết
   * @returns ProviderListResponse Danh sách nhà cung cấp
   * @throws ApiError
   */
  public static getByDomainBookieProvider(
    data: GetByDomainBookieProviderData
  ): CancelablePromise<GetByDomainBookieProviderResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/bookie/provider",
      path: {
        domain: data.domain,
      },
      query: {
        strProviderId: data.strProviderId,
        viewDetail: data.viewDetail,
      },
    });
  }

  /**
   * Lấy lịch khám theo nhà cung cấp & dịch vụ
   * @param data The data for the request.
   * @param data.domain Tên miền hệ thống
   * @param data.idProvider ID nhà cung cấp
   * @param data.date Ngày lấy lịch (yyyy-MM-dd)
   * @param data.idService ID dịch vụ (có thể để trống)
   * @returns ScheduleListResponse Danh sách lịch khám
   * @throws ApiError
   */
  public static getByDomainSchedule(
    data: GetByDomainScheduleData
  ): CancelablePromise<GetByDomainScheduleResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/schedule",
      path: {
        domain: data.domain,
      },
      query: {
        idService: data.idService,
        idProvider: data.idProvider,
        date: data.date,
      },
    });
  }

  /**
   * Lấy danh sách dịch vụ (phân trang)
   * @param data The data for the request.
   * @param data.domain Tên miền hệ thống
   * @param data.page Trang hiện tại
   * @param data.size Số lượng item mỗi trang
   * @param data.search Từ khóa tìm kiếm
   * @returns ServicePagingResponse Danh sách dịch vụ
   * @throws ApiError
   */
  public static getByDomainCmsDichVuPaging(
    data: GetByDomainCmsDichVuPagingData
  ): CancelablePromise<GetByDomainCmsDichVuPagingResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/cmsDichVu/paging",
      path: {
        domain: data.domain,
      },
      query: {
        search: data.search,
        page: data.page,
        size: data.size,
      },
    });
  }

  /**
   * Lấy tin tức theo nhóm chuyên mục
   * @param data The data for the request.
   * @param data.domain
   * @param data.page
   * @param data.pageSize
   * @param data.category
   * @returns unknown Danh sách tin tức nhóm theo chuyên mục
   * @throws ApiError
   */
  public static getByDomainNewsNewsGroupedByCategory(
    data: GetByDomainNewsNewsGroupedByCategoryData
  ): CancelablePromise<GetByDomainNewsNewsGroupedByCategoryResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/news/news-grouped-by-category",
      path: {
        domain: data.domain,
      },
      query: {
        page: data.page,
        pageSize: data.pageSize,
        category: data.category,
      },
    });
  }

  /**
   * Lấy danh sách chuyên mục tin tức
   * @param data The data for the request.
   * @param data.domain
   * @param data.page
   * @param data.size
   * @returns unknown Danh sách chuyên mục tin
   * @throws ApiError
   */
  public static getByDomainNewsCategory(
    data: GetByDomainNewsCategoryData
  ): CancelablePromise<GetByDomainNewsCategoryResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/NewsCategory",
      path: {
        domain: data.domain,
      },
      query: {
        page: data.page,
        size: data.size,
      },
    });
  }

  /**
   * Lấy danh sách lịch hẹn (phân trang)
   * @param data The data for the request.
   * @param data.domain
   * @param data.search
   * @param data.date
   * @param data.filterDate
   * @param data.trangThai
   * @param data.providerId
   * @param data.existMobile
   * @param data.typeOfAppointment
   * @param data.page
   * @param data.pageSize
   * @param data._from
   * @param data.to
   * @returns unknown Danh sách lịch hẹn
   * @throws ApiError
   */
  public static getByDomainBookieAppointmentPhantrang(
    data: GetByDomainBookieAppointmentPhantrangData
  ): CancelablePromise<GetByDomainBookieAppointmentPhantrangResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/BookieAppointment/phantrang",
      path: {
        domain: data.domain,
      },
      query: {
        search: data.search,
        date: data.date,
        filterDate: data.filterDate,
        trangThai: data.trangThai,
        providerId: data.providerId,
        existMobile: data.existMobile,
        typeOfAppointment: data.typeOfAppointment,
        page: data.page,
        pageSize: data.pageSize,
        from: data._from,
        to: data.to,
      },
    });
  }

  /**
   * Lấy danh sách banner hiển thị
   * @param data The data for the request.
   * @param data.domain Domain hệ thống
   * @param data.page Trang hiện tại
   * @param data.pageSize Số lượng item trên mỗi trang
   * @returns unknown Danh sách banner
   * @throws ApiError
   */
  public static getByDomainBookieBanners(
    data: GetByDomainBookieBannersData
  ): CancelablePromise<GetByDomainBookieBannersResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/Bookie/banners",
      path: {
        domain: data.domain,
      },
      query: {
        page: data.page,
        pageSize: data.pageSize,
      },
    });
  }

  /**
   * Lấy danh sách bác sĩ (phân trang)
   * @param data The data for the request.
   * @param data.domain Tên miền hệ thống
   * @param data.page Trang hiện tại
   * @param data.size Số lượng item mỗi trang
   * @param data.search Từ khóa tìm kiếm (tùy chọn)
   * @returns DoctorPagingResponse Danh sách bác sĩ
   * @throws ApiError
   */
  public static getByDomainCmsdoctorPaging(
    data: GetByDomainCmsdoctorPagingData
  ): CancelablePromise<GetByDomainCmsdoctorPagingResponse> {
    return __request(OpenAPI, {
      method: "GET",
      url: "/{domain}/cmsdoctor/paging",
      path: {
        domain: data.domain,
      },
      query: {
        page: data.page,
        size: data.size,
        search: data.search,
      },
    });
  }

  /**
   * Xác thực người dùng từ Zalo
   * @param data The data for the request.
   * @param data.domain
   * @param data.zaloCode
   * @param data.token
   * @param data.requestBody
   * @returns ZaloAuthResponse Thông tin người dùng từ Zalo
   * @throws ApiError
   */
  public static postByDomainBookieZaloInfo(
    data: PostByDomainBookieZaloInfoData
  ): CancelablePromise<PostByDomainBookieZaloInfoResponse> {
    return __request(OpenAPI, {
      method: "POST",
      url: "/{domain}/Bookie/zaloInfo",
      path: {
        domain: data.domain,
      },
      query: {
        zaloCode: data.zaloCode,
        token: data.token,
      },
      body: data.requestBody,
      mediaType: "application/json",
    });
  }
}
